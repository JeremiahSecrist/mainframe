name: Deployment

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Wireguard VPN through Tailscale
        # or use main branch to go on the bleeding edge
        uses: MadeByThePinsHub/tailscale-action-labels@v0.1.0
        with:
          # secret name may varies on your org
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          # the defaults tag goes here, plus some addons.
          labels: ${{ secrets.TAG }}
          # Going to unstable is risky, beware!
          version: "1.21.120"
      - name: Setup Wireguard VPN through Tailscale
        env:
          AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}
          TAGS: ${{ secrets.TAG}}
        run: |
          sudo curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscaled 2>~/tailscaled.log &
          HOSTNAME="gh-$(cat /etc/hostname)"
          until sudo tailscale up --authkey ${AUTHKEY} --hostname ${HOSTNAME} --advertise-tags ${TAG} --accept-routes
          do
            echo "warning: Tailnet Wireguard tunnel still not ready, please standby..."
            sleep 0.5
          done
          echo "Successfully connected to tailnet!"
          
      - name: check connection
        id: connect
        env:
          HOST: ${{ secrets.HOST }}
        run: tailscale ip -4 $HOST > /dev/null && tailscale ip -6  $HOST > /dev/null
          
      - name: Add SSH key
        id: ssh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          HOST: ${{ secrets.HOST }}
        run: |
          mkdir -p ~/.ssh
          MACHINE_IP=$(tailscale ip -4 $HOST
          ssh-keyscan $MACHINE_IP >> ~/.ssh/known_hosts
          printf "%s" "$SSH_KEY" > ~/.ssh/key
          chmod 600 ~/.ssh/key

      - name: Deploy code to server
        id: deploy
        env:
          HOST: ${{ secrets.HOST }}
          USER: 
        run: |
          MACHINE_IP=$(tailscale ip -4 $HOST )
          ssh -i ~/.ssh/key "${{ secrets.USERNAME }}@$MACHINE_IP" "touch test && exit"


